<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:content="http://purl.org/rss/1.0/modules/content/" xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:sy="http://purl.org/rss/1.0/modules/syndication/" xmlns:media="http://search.yahoo.com/mrss/"><channel><title>kubernetes on IBORA</title><link>https://ibora.evcoder.com/tags/kubernetes/</link><description>Recent content in kubernetes on IBORA</description><generator>Hugo -- gohugo.io</generator><language>zh</language><managingEditor>ender.viggin.coder@gmail.com (ender viggin)</managingEditor><webMaster>ender.viggin.coder@gmail.com (ender viggin)</webMaster><copyright>©2022, All Rights Reserved</copyright><lastBuildDate>Wed, 16 Feb 2022 10:22:02 +0800</lastBuildDate><atom:link href="https://ibora.evcoder.com/tags/kubernetes/index.xml" rel="self" type="application/rss+xml"/><item><title>kubernetes架构</title><link>https://ibora.evcoder.com/posts/kuberneteskubernetes%E6%9E%B6%E6%9E%84/</link><pubDate>Wed, 16 Feb 2022 10:22:02 +0800</pubDate><author>ender.viggin.coder@gmail.com (ender viggin)</author><atom:modified>Wed, 16 Feb 2022 10:22:02 +0800</atom:modified><guid>https://ibora.evcoder.com/posts/kuberneteskubernetes%E6%9E%B6%E6%9E%84/</guid><description>架构 Kubernetes 遵循非常传统的客户端服务端架构，客户端通过 RESTful 接口或者直接使用 kubectl 与Kubernetes 集群进行通信。每一个 Kubernetes 集群都由一组 Master 节点和一系列的Node节点组成，其中 Master 节点主要负责存储集群的状态并为 Kubernetes 对象分配和调度资源。
Master服务端也被称为主控节点。
主要任务： 负责管理所有节点。 负责调度Pod到哪些节点上运行。 负责控制集群运行过程中的所有状态。 主要组件 kube-apiserver组件：集群的HTTP REST API接口，是集群控制的入口。 kube-controller-manager组件：集群中所有资源对象的自动化控制中心。 kube-scheduler组件：集群中Pod资源对象的调度服务。 Node客户端也被称为工作节点。
主要任务 负责管理所有容器。 负责监控/上报所有Pod的运行状态。 主要组件 kubelet组件：负责管理节点上容器的创建、删除、启停等任务，与Master节点进行通信。 kube-proxy组件：负责Kubernetes服务的通信及负载均衡服务。 container组件：负责容器的基础管理服务，接收kubelet组件的指令。 组件简述 kubectl kubectl是Kubernetes官方提供的命令行工具，用户可以通过kubectl以命令行交互的方式对Kubernetes API Server进行操作，通信协议使用HTTP/JSON。
kubectl发送相应的HTTP请求，请求由Kubernetes API Server接收、处理并将结果反馈给kubectl。kubectl接收到响应并展示结果。至此，kubectl与kube-apiserver的一次请求周期结束。
kube-apiserver kube-apiserver组件，也被称为Kubernetes API Server。它负责将Kubernetes“资源组/资源版本/资源”以RESTful风格的形式对外暴露并提供服务。Kubernetes集群中的所有组件都通过kube-apiserver组件操作资源对象。kube-apiserver组件也是集群中唯一与etcd集群进行交互的核心组件。
etcd集群是分布式键值存储集群，其提供了可靠的强一致性服务发现。etcd集群存储Kubernetes系统集群的状态和元数据，其中包括所有Kubernetes资源对象信息、集群节点信息等。Kubernetes将所有数据存储至etcd集群中前缀为/registry的目录下。
kube-apiserver属于核心组件，具有以下重要特性：
将Kubernetes系统中的所有资源对象都封装成RESTful风格的API接口进行管理。 可进行集群状态管理和数据管理，是唯一与Etcd集群交互的组件。 拥有丰富的集群安全访问机制，以及认证、授权及准入控制器。 提供了集群各组件的通信和交互功能。 kube-controller-manager kube-controller-manager组件，也被称为Controller Manager（管理控制器），它负责管理Kubernetes集群中的节点、Pod副本、服务、端点、命名空间、服务账户、资源定额等。</description><dc:creator>ender viggin</dc:creator><media:content url="https://ibora.evcoder.comhttps://image.evcoder.com/image/hugo/blog/kubernetes-96.png" medium="image"><media:title type="html">featured image</media:title></media:content><category>kubernetes</category><category>kubernetes系列</category></item></channel></rss>